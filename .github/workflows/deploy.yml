name: Build and Deploy

on:
  push:
    branches: [backend]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build

      - name: Create deployment directory
        run: |
          mkdir -p deploy
          cp -r dist deploy/
          cp server.js deploy/
          cp package.json deploy/
          cp package-lock.json deploy/
          mkdir -p deploy/src
          cp -r src/models deploy/src/

      - name: Create production .env file
        run: |
          cd deploy
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> .env
          echo "NODE_ENV=production" >> .env

      - name: Deploy to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "deploy/*"
          target: ${{ secrets.DEPLOY_PATH }}
          strip_components: 1

      - name: Setup and start application on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ${{ secrets.DEPLOY_PATH }}
            # Install PM2 globally if not already installed
            if ! command -v pm2 &> /dev/null; then
              npm install -g pm2
            fi
            # Install production dependencies
            npm ci --omit=dev
            # Stop existing app instance if running
            pm2 stop app || true
            pm2 delete app || true
            # Start the app with PM2
            pm2 start server.js --name app
            # Save PM2 configuration
            pm2 save
