name: Build and Deploy (WSL)

on:
  push:
    branches: [backend]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Build Frontend
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install Node dependencies
        run: npm install

      - name: Update API URLs to local
        run: |
          chmod +x ./update-api-urls.sh
          ./update-api-urls.sh

      - name: Build frontend
        run: npm run build
        env:
          VITE_API_URL: "/api/v1" # Use local API path for production

      # Setup Go for backend
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"
          cache: true

      - name: Build Go backend for Linux
        run: |
          cd backend
          # Build for Linux target (WSL uses Linux binaries)
          CGO_ENABLED=1 go build -o app
          # Copy frontend build to the backend/build directory
          mkdir -p build
          cp -r ../dist/* build/

      - name: Prepare for deployment
        run: |
          # Create deployment directory with backend and frontend
          mkdir -p deploy
          cp -r backend/app deploy/
          cp -r backend/build deploy/
          cp -r backend/farm.db deploy/ || true

          # Create systemd service file for the application
          echo "[Unit]" > deploy/hydrodisease.service
          echo "Description=HydroDisease Predictor Service" >> deploy/hydrodisease.service
          echo "After=network.target" >> deploy/hydrodisease.service
          echo "" >> deploy/hydrodisease.service
          echo "[Service]" >> deploy/hydrodisease.service
          echo "Type=simple" >> deploy/hydrodisease.service
          echo "User=root" >> deploy/hydrodisease.service
          echo "WorkingDirectory=/opt/hydrodisease" >> deploy/hydrodisease.service
          echo "Environment=\"PORT=8080\"" >> deploy/hydrodisease.service
          echo "Environment=\"JWT_SECRET=your_secret_here\"" >> deploy/hydrodisease.service
          echo "ExecStart=/opt/hydrodisease/app" >> deploy/hydrodisease.service
          echo "Restart=on-failure" >> deploy/hydrodisease.service
          echo "RestartSec=5" >> deploy/hydrodisease.service
          echo "" >> deploy/hydrodisease.service
          echo "[Install]" >> deploy/hydrodisease.service
          echo "WantedBy=multi-user.target" >> deploy/hydrodisease.service

          # Create install script
          echo "#!/bin/bash" > deploy/install.sh
          echo "set -e" >> deploy/install.sh
          echo "" >> deploy/install.sh
          echo "echo \"Installing HydroDisease Predictor to WSL...\"" >> deploy/install.sh
          echo "" >> deploy/install.sh
          echo "# Create application directory" >> deploy/install.sh
          echo "sudo mkdir -p /opt/hydrodisease" >> deploy/install.sh
          echo "" >> deploy/install.sh
          echo "# Copy files" >> deploy/install.sh
          echo "sudo cp -r app /opt/hydrodisease/" >> deploy/install.sh
          echo "sudo cp -r build /opt/hydrodisease/" >> deploy/install.sh
          echo "sudo cp -r farm.db /opt/hydrodisease/ 2>/dev/null || echo \"No database file to copy\"" >> deploy/install.sh
          echo "" >> deploy/install.sh
          echo "# Install systemd service" >> deploy/install.sh
          echo "sudo cp hydrodisease.service /etc/systemd/system/" >> deploy/install.sh
          echo "sudo systemctl daemon-reload" >> deploy/install.sh
          echo "sudo systemctl enable hydrodisease.service" >> deploy/install.sh
          echo "sudo systemctl restart hydrodisease.service" >> deploy/install.sh
          echo "" >> deploy/install.sh
          echo "# Check status" >> deploy/install.sh
          echo "echo \"Service installed. Checking status:\"" >> deploy/install.sh
          echo "sudo systemctl status hydrodisease.service" >> deploy/install.sh
          echo "echo" >> deploy/install.sh
          echo "echo \"You can check logs with: sudo journalctl -u hydrodisease.service -f\"" >> deploy/install.sh
          echo "echo \"Application should be available at http://localhost:8080\"" >> deploy/install.sh

          # Make install script executable
          chmod +x deploy/install.sh

      # Install necessary tools
      - name: Install SSH tools
        run: sudo apt-get install -y openssh-client sshpass

      # Deploy using password
      - name: Deploy with password
        run: |
          echo "Attempting deployment to WSL..."
          # Create SSH directory if it doesn't exist
          mkdir -p ~/.ssh
          # Disable StrictHostKeyChecking for this deployment
          echo "StrictHostKeyChecking no" > ~/.ssh/config

          # Copy deployment files to server
          echo "Copying files to WSL environment..."
          sshpass -p "${{ secrets.SSH_PASSWORD }}" scp -P ${{ secrets.SSH_PORT }} -r deploy/* ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:~/hydrodisease/

          # Run the installation script
          echo "Running installation script..."
          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} "cd ~/hydrodisease && ./install.sh"

          # Check if application is running
          echo "Checking application status..."
          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} "curl -s http://localhost:8080 || echo 'Application not responding to HTTP requests'"

      # Manual instructions if all else fails
      - name: Deployment failure instructions
        if: ${{ failure() }}
        run: |
          echo "Automated deployment failed. Please follow these steps for manual deployment:"
          echo "1. Download artifacts from this build"
          echo "2. Copy files to your WSL environment"
          echo "3. Run the install.sh script manually"
